import requests
from bs4 import BeautifulSoup
import re
import time
import json

def send_vacancy_response(resume_hash: str, vacancy_id: str, my_letter: str, headers: dict, cookies: dict) -> int:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é –Ω–∞ hh.ru —Å —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–º –ø–∏—Å—å–º–æ–º.

    :param resume_hash: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ä–µ–∑—é–º–µ (hash)
    :param vacancy_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤–∞–∫–∞–Ω—Å–∏–∏
    :param my_letter: –¢–µ–∫—Å—Ç —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∏—Å—å–º–∞
    :param headers: –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    :param cookies: –ö—É–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    :return: HTTP —Å—Ç–∞—Ç—É—Å-–∫–æ–¥ –æ—Ç–≤–µ—Ç–∞
    """
    url_response = "https://hh.ru/applicant/vacancy_response/popup"

    files = {
        "resume_hash": (None, resume_hash),
        "vacancy_id": (None, vacancy_id),
        "letterRequired": (None, "true"),
        "letter": (None, my_letter),
        "lux": (None, "true"),
        "ignore_postponed": (None, "true"),
        "mark_applicant_visible_in_vacancy_country": (None, "false")
    }

    response = requests.post(url_response, headers=headers, cookies=cookies, files=files)
    print(f"[–û—Ç–∫–ª–∏–∫] Status: {response.status_code}")
    print(f"-{response.text}")
    json.loads(response.text)






    return response.status_code
def touch_resume(resume_hash: str, headers: dict, cookies: dict) -> int:
    """
    –ü–æ–¥–Ω–∏–º–∞–µ—Ç —Ä–µ–∑—é–º–µ –Ω–∞ hh.ru –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É resume_hash.

    :param resume_hash: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ä–µ–∑—é–º–µ (hash)
    :param headers: –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    :param cookies: –ö—É–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    :return: HTTP —Å—Ç–∞—Ç—É—Å-–∫–æ–¥ –æ—Ç–≤–µ—Ç–∞
    """
    url_touch = "https://hh.ru/applicant/resumes/touch"

    # –ü–æ–ª—è —Ñ–æ—Ä–º—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    touch_files = {
        "resume": (None, resume_hash),
        "undirectable": (None, "true")
    }

    response = requests.post(url_touch, headers=headers, cookies=cookies, files=touch_files)
    print(f"[–ü–æ–¥–Ω—è—Ç–∏–µ —Ä–µ–∑—é–º–µ] Status: {response.status_code}")
    return response.status_code
def get_vacancy_ids(url: str, headers: dict, cookies: dict) -> list:
    """
    –î–µ–ª–∞–µ—Ç GET-–∑–∞–ø—Ä–æ—Å –∫ hh.ru –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ ID –≤–∞–∫–∞–Ω—Å–∏–π —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–∏—Å–∫–∞.

    :param url: –°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π
    :param headers: –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    :param cookies: –ö—É–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    :return: –°–ø–∏—Å–æ–∫ ID –≤–∞–∫–∞–Ω—Å–∏–π
    """
    response = requests.get(url, headers=headers, cookies=cookies)
    soup = BeautifulSoup(response.text, "html.parser")

    vacancy_links = soup.find_all("a", href=re.compile(r"/vacancy/\d+"))
    vacancy_ids = []

    for link in vacancy_links:
        match = re.search(r"/vacancy/(\d+)", link["href"])
        if match:
            vacancy_ids.append(match.group(1))

    return list(set(vacancy_ids))


url="<link>"
pages="<number>"
resume_hash="<id_resume>"  #dsdsd59ff04cefdfds32d1f6d6c73563035  <- https://hh.ru/resume/|dsdsd59ff04cefdfds32d1f6d6c73563035|
my_letter = (
    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n\n"
    "–Ø –≤—ã—Ä–∞–∂–∞—é –∏—Å–∫—Ä–µ–Ω–Ω–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏. "
    "–û–∑–Ω–∞–∫–æ–º–∏–≤—à–∏—Å—å —Å –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –≤–∞—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, —É–≤–µ—Ä–µ–Ω(–∞), —á—Ç–æ –º–æ–π –æ–ø—ã—Ç –∏ –Ω–∞–≤—ã–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ.\n\n"
    "–Ø –≤—Å–µ–≥–¥–∞ —Å—Ç—Ä–µ–º–ª—é—Å—å –∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–º—É —Ä–∞–∑–≤–∏—Ç–∏—é –∏ –≥–æ—Ç–æ–≤(–∞) –æ—Å–≤–∞–∏–≤–∞—Ç—å –Ω–æ–≤–æ–µ. "
    "–£–≤–µ—Ä–µ–Ω–∞, —á—Ç–æ –≤–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ç–ª–∏—á–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–æ—Å—Ç–∞, –æ–±—É—á–µ–Ω–∏—è –∏ —Å–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏. "
    "–ë—É–¥—É —Ä–∞–¥(–∞) —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –∏ –≤–Ω–µ—Å—Ç–∏ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –æ–±—â–∏—Ö —Ü–µ–ª–µ–π.\n\n"
    "–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\n"
    "–ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ\n"
    "üìû <–Ω–æ—Ä–º–µ>\n"
    "üìß <–ø–æ—á—Ç–∞>"
)
# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
hhtoken = "<token hhtoken>"
hhul = "<token hhul>"
crypted_id = "<token crypted_id>"
xsrf = "<token xsrf>"

headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36",
    "Referer": "https://hh.ru/vacancy/118797963?from=applicant_recommended&hhtmFrom=main",
    "Origin": "https://hh.ru",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
    "Accept-Language": "ru-RU,ru;q=0.9,en;q=0.5",
    "X-Requested-With": "XMLHttpRequest",
    "X-HHTMFrom": "main",
    "X-HHTMSource": "vacancy",
    "X-XsrfToken": xsrf
}

cookies = {
    "hhtoken": hhtoken,
    "hhul": hhul,
    "crypted_id": crypted_id,
    "_xsrf": xsrf
}



spis_vacansy=[]

for i in range(pages):
    spis_vacansy+=get_vacancy_ids(url+f"&page={i}", headers, cookies)

print(spis_vacansy)
print(len(spis_vacansy))



for i in get_vacancy_ids(url, headers, cookies):
    print(1)
    send_vacancy_response(resume_hash, i, my_letter, headers, cookies)
    time.sleep(3)

touch_resume(resume_hash, headers, cookies) # –ø–æ–¥–Ω—è—Ç–∏–µ —Ä–µ–∑—é–º–µ